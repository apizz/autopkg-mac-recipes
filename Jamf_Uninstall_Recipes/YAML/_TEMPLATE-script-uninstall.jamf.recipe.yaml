Comment: |
  This recipe is a template recipe for uninstall policies which use a single script. It can be overridden directly if the NAME, SELF_SERVICE_DESCRIPTION, SELF_SERVICE_ICON and SCRIPT_NAME keys are overridden. 
  If the policy name does not match the NAME key, e.g. due to language or license being added to the policy name, SELF_SERVICE_DISPLAY_NAME and smart group name values may also need to be overridden.
  Do not add things like language or license to the NAME key.
Description: Uploads a script to the Jamf Pro Server and creates a Self Service Policy and Smart Group.
Identifier: com.github.eth-its-recipes.jamf.template-script-uninstall
MinimumVersion: 2.0.0

Input:
  NAME: TEMPLATE_RECIPE
  SCRIPT_NAME: Cisco AnyConnect-uninstall.sh
  SELF_SERVICE_DESCRIPTION: Uninstalls Cisco AnyConnect. Please note that with macOS Big Sur and above, an administrator account password must be provided via a prompt in order to remove the System Extension that comes with Cisco AnyConnect.
  SELF_SERVICE_ICON: Cisco AnyConnect.png
  INSTALL_ALL_GROUP_NAME: Software Gets Auto-installed
  INSTALL_ALL_GROUP_TEMPLATE: SmartGroup-Software-Gets-Auto-installed.xml
  AUTOINSTALL_GROUP_NAME: "%NAME% auto-install"
  AUTOINSTALL_GROUP_TEMPLATE: SmartGroup-auto-install.xml
  INSTALLED_GROUP_NAME: "%NAME% installed"
  INSTALLED_GROUP_TEMPLATE: SmartGroup-installed.xml
  TESTING_GROUP_NAME: Testing
  TESTING_GROUP_TEMPLATE: StaticGroup-testing.xml
  USERS_GROUP_NAME: "%NAME% users"
  USERS_GROUP_TEMPLATE: SmartGroup-users.xml
  POLICY_CATEGORY: Uninstallers
  POLICY_TEMPLATE: Policy-uninstall-self-service.xml
  POLICY_NAME: "%NAME%"
  UNINSTALL_POLICY_TEMPLATE: Policy-uninstall-self-service.xml
  UNINSTALL_TRIGGERONLY_POLICY_TEMPLATE: Policy-uninstall-triggeronly.xml
  UNINSTALL_SELF_SERVICE_DESCRIPTION: "Uninstalls %NAME%"
  UNINSTALL_SELF_SERVICE_DISPLAY_NAME: "Uninstall %NAME%"
  UNINSTALL_SELF_SERVICE_INSTALL_BUTTON: Uninstall
  UNINSTALL_SELF_SERVICE_REINSTALL_BUTTON: Uninstall
  UNINSTALL_TRIGGER_NAME: "%NAME%-uninstall"
  SCRIPT_PRIORITY: After
  SELF_SERVICE_DISPLAY_NAME: "Uninstall %NAME%"
  INSTALL_BUTTON_TEXT: Uninstall
  REINSTALL_BUTTON_TEXT: Uninstall

Process:
  - Processor: com.github.grahampugh.jamf-upload.processors/JamfCategoryUploader
    Arguments:
      category_name: "%POLICY_CATEGORY%"

  - Processor: com.github.grahampugh.jamf-upload.processors/JamfScriptUploader
    Arguments:
      script_category: "%POLICY_CATEGORY%"
      script_path: "%SCRIPT_NAME%"
      script_priority: "%SCRIPT_PRIORITY%"
      replace_script: "True"

  - Processor: com.github.grahampugh.jamf-upload.processors/JamfComputerGroupUploader
    Arguments:
      computergroup_template: "%TESTING_GROUP_TEMPLATE%"
      computergroup_name: "%TESTING_GROUP_NAME%"
      replace_group: "False"

  - Processor: com.github.grahampugh.jamf-upload.processors/JamfComputerGroupUploader
    Arguments:
      computergroup_template: "%USERS_GROUP_TEMPLATE%"
      computergroup_name: "%USERS_GROUP_NAME%"
      replace_group: "False"

  - Processor: com.github.grahampugh.jamf-upload.processors/JamfComputerGroupUploader
    Arguments:
      computergroup_template: "%INSTALL_ALL_GROUP_TEMPLATE%"
      computergroup_name: "%INSTALL_ALL_GROUP_NAME%"
      replace_group: "False"

  - Processor: com.github.grahampugh.jamf-upload.processors/JamfComputerGroupUploader
    Arguments:
      computergroup_template: "%AUTOINSTALL_GROUP_TEMPLATE%"
      computergroup_name: "%AUTOINSTALL_GROUP_NAME%"
      replace_group: "False"

  - Processor: com.github.grahampugh.jamf-upload.processors/JamfComputerGroupUploader
    Arguments:
      computergroup_template: "%INSTALLED_GROUP_TEMPLATE%"
      computergroup_name: "%INSTALLED_GROUP_NAME%"
      replace_group: "True"

  - Processor: com.github.grahampugh.jamf-upload.processors/JamfPolicyUploader
    Arguments:
      policy_template: "%POLICY_TEMPLATE%"
      policy_name: "%POLICY_NAME%"
      icon: "%SELF_SERVICE_ICON%"
      replace_policy: "True"
